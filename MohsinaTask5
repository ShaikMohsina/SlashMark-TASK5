npx create-react-app digital-shop
npm i zustand react-router-dom
import { create } from "zustand";
import { persist } from "zustand/middleware";
let store = (set) => ({
  isLoggedIn: false,
  setUserState: (isLoggedIn) => set(() => ({ isLoggedIn })),
});
//persist the state with key "randomKey"
store = persist(store, { name: "user-store" });
//create the store
let useStore = create(store);
export default useStore;
import React from 'react';
import { Outlet, Navigate } from 'react-router-dom';
import  useStore  from '../store/user';
const Private = () => {
  const isLoggedIn = useStore((state) => state.isLoggedIn);
  return isLoggedIn ? <Outlet /> : <Navigate to="/" />;
};
export default Private;
import React from 'react';
import { Outlet, Navigate } from 'react-router-dom';
import  useStore  from '../store/user';
const Public = () => {
  const isLoggedIn = useStore((state) => state.isLoggedIn);
  return !isLoggedIn ? <Outlet /> : <Navigate to="/dashboard" />;
};
export default Public;
import { BrowserRouter, Routes, Route } from "react-router-dom";
import Login from "./pages/login";
import PrivateRoutes from "./routes/private";
import PublicRoutes from "./routes/public";
const App = () => {
  return (
 <BrowserRouter >
   <Routes>
     <Route path="/" element={<PublicRoutes />}>
         <Route index element={<h1>Browse</h1>} />
         <Route path="product-list" element={<h1>Product List</h1>}></Route>
         <Route path="login" element={<Login />}></Route>
     </Route>
     <Route path="/" element={<PrivateRoutes />}>
         <Route path="dashboard" element={<h1>Dashboard</h1>}></Route>
         <Route path="product-add" element={<h1>Product Add</h1>}></Route>
         <Route path="checkout" element={<h1>checkout</h1>}></Route>
         <Route path="thank-you" element={<h1>Thank You</h1>}></Route>
     </Route>
   </Routes>
 </BrowserRouter>
  );
}
export default App;
let store = (set) => ({
  isLoggedIn: true,
  setUserState: (isLoggedIn) => set(() => ({ isLoggedIn })),
});
